# mafia_handlers/game_mafia_lobby.py
import asyncio
import logging
from aiogram import Router, Bot, F, html
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command, StateFilter, Filter
from aiogram.filters.callback_data import CallbackData
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest
from contextlib import suppress
from datetime import datetime

import config
from database import Database
from settings import SettingsManager

# --- –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –ò–ú–ü–û–†–¢–´ ---
# (–ë–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ utils.py –≤ –∫–æ—Ä–Ω–µ)
from utils import active_lobby_timers, format_time_left, active_games, GAME_ACTIVE_KEY
# (–ë–µ—Ä–µ–º FSM –∏ 'start_game' –∏–∑ .py-—Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –º—ã —Å–æ–∑–¥–∞–ª–∏ –Ω–∞ –®–∞–≥–µ 5)
from .game_mafia_core import MafiaGameStates, distribute_roles_and_start 
# --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ---

mafia_lobby_router = Router()

# --- CallbackData ---
class MafiaLobbyCallbackData(CallbackData, prefix="mafia_lobby"):
    action: str # join, leave, start, toggle_timer, cancel

# --- –§–∏–ª—å—Ç—Ä: –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –∞–¥–º–∏–Ω–æ–º —á–∞—Ç–∞ ---
class IsChatAdmin(Filter):
    async def __call__(self, message_or_callback: Message | CallbackQuery, bot: Bot) -> bool:
        if isinstance(message_or_callback, CallbackQuery):
            chat_id = message_or_callback.message.chat.id
        else:
            chat_id = message_or_callback.chat.id
            
        member = await bot.get_chat_member(chat_id, message_or_callback.from_user.id)
        return member.status in ('administrator', 'creator')

# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –õ–æ–±–±–∏ ---

async def is_game_active(chat_id: int) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ –∏–¥–µ—Ç –ª–∏ —É–∂–µ –≤ —á–∞—Ç–µ –¥—Ä—É–≥–∞—è –∏–≥—Ä–∞ (–†—É–ª–µ—Ç–∫–∞, –õ–µ—Å–µ–Ω–∫–∞).
    (–ò—Å–ø–æ–ª—å–∑—É–µ—Ç 'active_games' –∏–∑ utils.py)
    """
    return active_games.get(chat_id, {}).get(GAME_ACTIVE_KEY, False)


async def generate_lobby_text_and_keyboard(db: Database, settings: SettingsManager, chat_id: int, creator_id: int, timer_enabled: bool) -> (str, InlineKeyboardMarkup):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ª–æ–±–±–∏-—Å–æ–æ–±—â–µ–Ω–∏—è."""
    
    players_list_data = await db.get_mafia_players(chat_id)
    player_count = len(players_list_data)
    
    text = f"üïµÔ∏è‚Äç‚ôÇÔ∏è <b>–ù–∞–±–æ—Ä –≤ '–ü–∏–≤–Ω—É—é –ú–∞—Ñ–∏—é'</b> üïµÔ∏è‚Äç‚ôÇÔ∏è\n\n"
    text += f"–ò–¥–µ—Ç –Ω–∞–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤. –í–µ–¥—É—â–∏–π (—Å–æ–∑–¥–∞—Ç–µ–ª—å): {html.quote((await db.get_user_by_id(creator_id))[0])}\n\n"
    
    text += "<b>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</b>\n"
    if not players_list_data:
        text += "<i>–ü–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç...</i>\n"
    else:
        for i, player in enumerate(players_list_data):
            user_id = player[1]
            player_name = html.quote((await db.get_user_by_id(user_id))[0])
            text += f"{i+1}. {player_name}\n"
            
    text += f"\n<b>–í—Å–µ–≥–æ:</b> {player_count} / {settings.mafia_max_players}\n"
    
    if timer_enabled:
        time_left = format_time_left(settings.mafia_lobby_timer)
        text += f"–ê–≤—Ç–æ-—Å—Ç–∞—Ä—Ç —á–µ—Ä–µ–∑: <b>{time_left}</b> (–µ—Å–ª–∏ –Ω–∞–±–µ—Ä–µ—Ç—Å—è –º–∏–Ω. {settings.mafia_min_players} —á–µ–ª.)"
    else:
        text += "<i>–ê–≤—Ç–æ-—Å—Ç–∞—Ä—Ç –æ—Ç–∫–ª—é—á–µ–Ω. –û–∂–∏–¥–∞–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—è.</i>"
        
    # --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ---
    buttons = [
        [
            InlineKeyboardButton(text="‚úÖ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è", callback_data=MafiaLobbyCallbackData(action="join").pack()),
            InlineKeyboardButton(text="‚ùå –ü–æ–∫–∏–Ω—É—Ç—å", callback_data=MafiaLobbyCallbackData(action="leave").pack())
        ],
        [
            InlineKeyboardButton(text="‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å –∏–≥—Ä—É", callback_data=MafiaLobbyCallbackData(action="start").pack()),
            InlineKeyboardButton(
                text=f"‚è±Ô∏è {'–í—ã–∫–ª' if timer_enabled else '–í–∫–ª'} –¢–∞–π–º–µ—Ä", 
                callback_data=MafiaLobbyCallbackData(action="toggle_timer").pack()
            )
        ],
        [InlineKeyboardButton(text="üö´ –û—Ç–º–µ–Ω–∏—Ç—å –∏–≥—Ä—É", callback_data=MafiaLobbyCallbackData(action="cancel").pack())]
    ]
    
    return text, InlineKeyboardMarkup(inline_keyboard=buttons)

async def update_lobby_message(bot: Bot, db: Database, settings: SettingsManager, chat_id: int):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∏ –≤ –ª–æ–±–±–∏ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ join/leave)."""
    game = await db.get_mafia_game(chat_id)
    if not game or game[3] != 'lobby': # game[3] = status
        return
        
    message_id = game[1]
    creator_id = game[2]
    timer_enabled = chat_id in active_lobby_timers
    
    try:
        text, keyboard = await generate_lobby_text_and_keyboard(db, settings, chat_id, creator_id, timer_enabled)
        await bot.edit_message_text(text, chat_id, message_id, reply_markup=keyboard, parse_mode="HTML")
    except TelegramBadRequest as e:
        if "message is not modified" in str(e):
            pass # –ù–µ —Å–ø–∞–º–∏–º, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
        else:
            logging.error(f"[Mafia {chat_id}] –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–æ–±–±–∏: {e}")
    except Exception as e:
        logging.error(f"[Mafia {chat_id}] –ö—Ä–∏—Ç. –æ—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–æ–±–±–∏: {e}")

async def lobby_timer_task(chat_id: int, bot: Bot, db: Database, settings: SettingsManager):
    """–§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞-—Ç–∞–π–º–µ—Ä –¥–ª—è –ª–æ–±–±–∏."""
    await asyncio.sleep(settings.mafia_lobby_timer)
    
    if chat_id in active_lobby_timers:
        del active_lobby_timers[chat_id]
        
    game = await db.get_mafia_game(chat_id)
    if not game or game[3] != 'lobby':
        logging.info(f"[Mafia {chat_id}] –¢–∞–π–º–µ—Ä –ª–æ–±–±–∏: –∏–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –æ—Ç–º–µ–Ω–∞.")
        return

    player_count = await db.get_mafia_player_count(chat_id)
    
    if player_count < settings.mafia_min_players:
        logging.info(f"[Mafia {chat_id}] –¢–∞–π–º–µ—Ä –ª–æ–±–±–∏: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ ({player_count}). –û—Ç–º–µ–Ω–∞.")
        await bot.send_message(chat_id, "‚è∞ –í—Ä–µ–º—è –≤—ã—à–ª–æ, –∞ –∏–≥—Ä–æ–∫–æ–≤ –Ω–µ –Ω–∞–±—Ä–∞–ª–æ—Å—å. –ò–≥—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        await db.delete_mafia_game(chat_id)
        if chat_id in active_games: del active_games[chat_id]
    else:
        logging.info(f"[MafIA {chat_id}] –¢–∞–π–º–µ—Ä –ª–æ–±–±–∏: –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã...")
        players = await db.get_mafia_players(chat_id)
        await distribute_roles_and_start(chat_id, bot, db, settings, players)


# --- –•–≠–ù–î–õ–ï–†–´ –õ–û–ë–ë–ò ---

@mafia_lobby_router.message(Command("mafia"))
async def cmd_mafia_start(message: Message, bot: Bot, db: Database, settings: SettingsManager):
    chat_id = message.chat.id
    if message.chat.type == 'private':
        await message.reply("üïµÔ∏è‚Äç‚ôÇÔ∏è –ò–≥—Ä—É –≤ –ú–∞—Ñ–∏—é –º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ <b>–≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ</b>.", parse_mode="HTML")
        return
        
    if await is_game_active(chat_id):
        await message.reply("–í —ç—Ç–æ–º —á–∞—Ç–µ —É–∂–µ –∏–¥–µ—Ç –¥—Ä—É–≥–∞—è –∏–≥—Ä–∞ (–†—É–ª–µ—Ç–∫–∞ –∏–ª–∏ –õ–µ—Å–µ–Ω–∫–∞). –î–æ–∂–¥–∏—Ç–µ—Å—å –µ–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è.")
        return
        
    if await db.get_mafia_game(chat_id):
        await message.reply("–í —ç—Ç–æ–º —á–∞—Ç–µ —É–∂–µ –∏–¥–µ—Ç –Ω–∞–±–æ—Ä –∏–ª–∏ –∏–≥—Ä–∞ –≤ –ú–∞—Ñ–∏—é!")
        return
        
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º "–ø—É—Å—Ç—ã—à–∫—É", —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å message_id
    dummy_message = await message.answer("–°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–±–±–∏...")
    message_id = dummy_message.message_id
    
    creator_id = message.from_user.id
    
    # –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É –≤ –ë–î
    success = await db.create_mafia_game(chat_id, message_id, creator_id)
    if not success:
        await dummy_message.edit_text("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É (–≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ —É–∂–µ –µ—Å—Ç—å).")
        return
        
    # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
    task = asyncio.create_task(lobby_timer_task(chat_id, bot, db, settings))
    active_lobby_timers[chat_id] = task
    
    # –°—Ç–∞–≤–∏–º —Ñ–ª–∞–≥ "–∏–≥—Ä–∞ –∞–∫—Ç–∏–≤–Ω–∞"
    active_games[chat_id] = {GAME_ACTIVE_KEY: True, "game_type": "mafia"}
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –ª–æ–±–±–∏
    await update_lobby_message(bot, db, settings, chat_id)
    with suppress(TelegramBadRequest):
        await bot.pin_chat_message(chat_id, message_id, disable_notification=True)


@mafia_lobby_router.callback_query(MafiaLobbyCallbackData.filter(F.action == "join"))
async def cq_mafia_join(callback: CallbackQuery, bot: Bot, db: Database, settings: SettingsManager):
    chat_id = callback.message.chat.id
    user = callback.from_user
    
    game = await db.get_mafia_game(chat_id)
    if not game or game[3] != 'lobby':
        await callback.answer("–ù–∞–±–æ—Ä –≤ –∏–≥—Ä—É —É–∂–µ –∑–∞–∫—Ä—ã—Ç.", show_alert=True)
        return
        
    if not await db.user_exists(user.id):
        # (–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–∑ handlers/common.py –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, —Ç.–∫. —ç—Ç–æ –¥—Ä—É–≥–æ–π –±–æ—Ç)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –õ–° –æ—Å–Ω–æ–≤–Ω–æ–º—É –±–æ—Ç—É
        me = await bot.get_me() # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ –æ –ú–∞—Ñ–∏—è-–±–æ—Ç–µ
        # –ò—â–µ–º —Ç–æ–∫–µ–Ω –ü–∏–≤–æ-–±–æ—Ç–∞ (—Ö–∞–∫)
        main_bot_token = os.getenv("BOT_TOKEN", getattr(config, "BOT_TOKEN", None))
        if main_bot_token:
            try:
                main_bot_info = await Bot(main_bot_token).get_me()
                start_link = f"https://t.me/{main_bot_info.username}?start=register"
                await callback.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –ü–∏–≤–Ω–æ–º –ë–æ—Ç–µ! –°–Ω–∞—á–∞–ª–∞ –∑–∞–π–¥–∏—Ç–µ –∫ –Ω–µ–º—É –≤ –õ–°.", show_alert=True)
                await bot.send_message(user.id, f"–ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –±–æ—Ç–µ '–ü–∏–≤–Ω–æ–π'.\n"
                                             f"–ó–∞–π–¥–∏ —Å—é–¥–∞ ‚û°Ô∏è @{main_bot_info.username} –∏ –Ω–∞–∂–º–∏ /start, –ø–æ—Ç–æ–º –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è.",
                                             reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                                                 [InlineKeyboardButton(text="‚û°Ô∏è –ö –ü–∏–≤–Ω–æ–º—É –ë–æ—Ç—É", url=start_link)]
                                             ]))
            except Exception:
                 await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ü–∏–≤–Ω–æ–≥–æ –ë–æ—Ç–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.", show_alert=True)
        else:
             await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ü–∏–≤CSS-–±–æ—Ç–∞.", show_alert=True)
        return

    player_count = await db.get_mafia_player_count(chat_id)
    if player_count >= settings.mafia_max_players:
        await callback.answer("–õ–æ–±–±–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ!", show_alert=True)
        return
        
    success = await db.add_mafia_player(chat_id, user.id)
    if success:
        await callback.answer("–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!")
        await update_lobby_message(bot, db, settings, chat_id)
    else:
        await callback.answer("–í—ã —É–∂–µ –≤ –∏–≥—Ä–µ!", show_alert=True)


@mafia_lobby_router.callback_query(MafiaLobbyCallbackData.filter(F.action == "leave"))
async def cq_mafia_leave(callback: CallbackQuery, bot: Bot, db: Database, settings: SettingsManager):
    chat_id = callback.message.chat.id
    user_id = callback.from_user.id
    
    game = await db.get_mafia_game(chat_id)
    if not game or game[3] != 'lobby':
        await callback.answer("–ù–∞–±–æ—Ä –≤ –∏–≥—Ä—É —É–∂–µ –∑–∞–∫—Ä—ã—Ç.", show_alert=True)
        return
        
    await db.remove_mafia_player(chat_id, user_id)
    await callback.answer("–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ –ª–æ–±–±–∏.")
    await update_lobby_message(bot, db, settings, chat_id)


@mafia_lobby_router.callback_query(MafiaLobbyCallbackData.filter(F.action == "cancel"), IsChatAdmin())
async def cq_mafia_cancel_game(callback: CallbackQuery, bot: Bot, db: Database, settings: SettingsManager):
    chat_id = callback.message.chat.id
    game = await db.get_mafia_game(chat_id)
    if not game: return await callback.answer()
    
    # –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä
    if chat_id in active_lobby_timers:
        active_lobby_timers[chat_id].cancel()
        del active_lobby_timers[chat_id]
        
    # –£–¥–∞–ª—è–µ–º —Ñ–ª–∞–≥ –∏–≥—Ä—ã
    if chat_id in active_games:
        del active_games[chat_id]
        
    message_id = game[1]
    with suppress(TelegramBadRequest):
        await bot.unpin_chat_message(chat_id, message_id)
        
    await db.delete_mafia_game(chat_id)
    await callback.answer("–ò–≥—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    await bot.edit_message_text("üö´ –ò–≥—Ä–∞ –≤ –ú–∞—Ñ–∏—é –æ—Ç–º–µ–Ω–µ–Ω–∞.", chat_id, message_id, reply_markup=None)


@mafia_lobby_router.callback_query(MafiaLobbyCallbackData.filter(F.action == "toggle_timer"))
async def cq_mafia_toggle_timer(callback: CallbackQuery, bot: Bot, db: Database, settings: SettingsManager):
    chat_id = callback.message.chat.id
    user_id = callback.from_user.id
    
    game = await db.get_mafia_game(chat_id)
    if not game or game[3] != 'lobby': return await callback.answer()
    
    creator_id = game[2]
    if user_id != creator_id:
        await callback.answer("–¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ª–æ–±–±–∏ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–∞–π–º–µ—Ä–æ–º.", show_alert=True)
        return

    if chat_id in active_lobby_timers:
        active_lobby_timers[chat_id].cancel()
        del active_lobby_timers[chat_id]
        await callback.answer("–¢–∞–π–º–µ—Ä –∞–≤—Ç–æ-—Å—Ç–∞—Ä—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω.")
        await update_lobby_message(bot, db, settings, chat_id)
    else:
        task = asyncio.create_task(lobby_timer_task(chat_id, bot, db, settings))
        active_lobby_timers[chat_id] = task
        await callback.answer("–¢–∞–π–º–µ—Ä –∞–≤—Ç–æ-—Å—Ç–∞—Ä—Ç–∞ –∑–∞–ø—É—â–µ–Ω!")
        await update_lobby_message(bot, db, settings, chat_id)

@mafia_lobby_router.callback_query(MafiaLobbyCallbackData.filter(F.action == "start"), IsChatAdmin())
async def cq_mafia_start_game(callback: CallbackQuery, bot: Bot, db: Database, settings: SettingsManager):
    chat_id = callback.message.chat.id
    user_id = callback.from_user.id
    
    game = await db.get_mafia_game(chat_id)
    if not game or game[3] != 'lobby': return
    
    creator_id = game[2]
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ê–¥–º–∏–Ω–∞ —á–∞—Ç–∞ (—Ñ–∏–ª—å—Ç—Ä IsChatAdmin —É–∂–µ —Å–¥–µ–ª–∞–ª, –Ω–æ –¥–ª—è /startgame –Ω—É–∂–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–∞—è)
    # –ó–¥–µ—Å—å –º—ã —Ä–∞–∑—Ä–µ—à–∞–µ–º –ª—é–±–æ–º—É –ê–¥–º–∏–Ω—É (–Ω–µ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é)
    
    player_count = await db.get_mafia_player_count(chat_id)
    if player_count < settings.mafia_min_players:
        await callback.answer(f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤. (–ú–∏–Ω: {settings.mafia_min_players})", show_alert=True)
        return

    # –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä
    if chat_id in active_lobby_timers:
        active_lobby_timers[chat_id].cancel()
        del active_lobby_timers[chat_id]
        
    await callback.answer("–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã...")
    
    players = await db.get_mafia_players(chat_id)
    await distribute_roles_and_start(chat_id, bot, db, settings, players)


# --- –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ (–¥–ª—è –ê–¥–º–∏–Ω–æ–≤) ---
@mafia_lobby_router.message(Command("startgame"), IsChatAdmin())
async def cmd_mafia_force_start(message: Message, bot: Bot, db: Database, settings: SettingsManager):
    chat_id = message.chat.id
    
    game = await db.get_mafia_game(chat_id)
    if not game or game[3] != 'lobby':
        await message.reply("–°–µ–π—á–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ª–æ–±–±–∏.")
        return

    player_count = await db.get_mafia_player_count(chat_id)
    if player_count < settings.mafia_min_players:
        await message.reply(f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤. (–ú–∏–Ω: {settings.mafia_min_players})")
        return

    # –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä
    if chat_id in active_lobby_timers:
        active_lobby_timers[chat_id].cancel()
        del active_lobby_timers[chat_id]
        
    await message.answer("–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã...")
    
    players = await db.get_mafia_players(chat_id)
    await distribute_roles_and_start(chat_id, bot, db, settings, players)
