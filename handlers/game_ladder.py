# handlers/game_ladder.py
# ... (–≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã) ...
from settings import settings_manager # <-- –ò–ú–ü–û–†–¢ –ú–ï–ù–ï–î–ñ–ï–†–ê

# ... (–ø—Ä–æ—á–∏–π –∫–æ–¥ –ª–µ—Å–µ–Ω–∫–∏) ...

@ladder_router.message(Command("ladder"))
async def cmd_ladder(message: Message, bot: Bot):
    chat_id = message.chat.id
    if chat_id in active_ladder_games:
        return await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
    
    args = message.text.split()
    if len(args) != 2 or not args[1].isdigit():
        return await message.reply("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç...")
    
    stake = int(args[1])
    
    # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨ ---
    min_bet = settings_manager.ladder_min_bet
    max_bet = settings_manager.ladder_max_bet
    if not (min_bet <= stake <= max_bet):
        return await message.reply(f"–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç {min_bet} –¥–æ {max_bet} üç∫.")
    # --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---

    if not await check_user_registered(message, bot):
        return
    
    balance = await db.get_user_beer_rating(message.from_user.id)
    if balance < stake:
        return await message.reply(f"–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∏–≤–∞...")
        
    await start_ladder_game(message.chat, message.from_user, bot, stake)

# ... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –ª–µ—Å–µ–Ω–∫–∏) ...
