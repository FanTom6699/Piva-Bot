# handlers/game_raid.py
import asyncio
import random
import time
import html # --- –î–û–ë–ê–í–õ–ï–ù–û: –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º–µ–Ω ---
from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from database import Database
from settings import SettingsManager
from utils import format_time_delta
from handlers.common import check_user_registered

game_router = Router()

# --- –ò–ó–ú–ï–ù–ï–ù–ò–ï 1: –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—Ä–∞–∑—ã –¥–ª—è –∞—Ç–∞–∫ ---
RAID_ATTACK_PHRASES = {
    'normal': [
        "<i>{name} –∫–∏–Ω—É–ª –≤ –í—ã—à–∏–±–∞–ª—É –ø—É—Å—Ç–æ–π –∫—Ä—É–∂–∫–æ–π! <b>-{damage}</b> ‚ù§Ô∏è</i>",
        "<i>{name} –∫—Ä–∏–∫–Ω—É–ª '–¢–≤–æ–µ –ø–∏–≤–æ - –≤–æ–¥–∞!' –∏ –Ω–∞–Ω–µ—Å <b>-{damage}</b> ‚ù§Ô∏è —É—Ä–æ–Ω–∞!</i>",
        "<i>{name} –ª–æ–≤–∫–æ –ø–Ω—É–ª –í—ã—à–∏–±–∞–ª—É –ø–æ–¥ –∫–æ–ª–µ–Ω–æ! <b>-{damage}</b> ‚ù§Ô∏è</i>"
    ],
    'strong': [
        "<i>{name} –æ–ø—Ä–æ–∫–∏–Ω—É–ª –Ω–∞ –í—ã—à–∏–±–∞–ª—É —Ü–µ–ª—ã–π –±–æ—á–æ–Ω–æ–∫! <b>-{damage}</b> ‚ù§Ô∏è</i>",
        "<i>{name} —Ä–∞–∑–±–∏–ª –æ–± –í—ã—à–∏–±–∞–ª—É –±–∞—Ä–Ω—ã–π —Å—Ç—É–ª! –ú–æ—â–Ω–æ! <b>-{damage}</b> ‚ù§Ô∏è</i>",
        "<i>{name} –ø—Ä–æ–≤–µ–ª —Å–µ—Ä–∏—é —É–¥–∞—Ä–æ–≤ '–ø—å—è–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞'! <b>-{damage}</b> ‚ù§Ô∏è</i>"
    ],
    'fail': [
        "<i>{name} –ø–æ–ø—ã—Ç–∞–ª—Å—è —É–¥–∞—Ä–∏—Ç—å, –Ω–æ –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è...</i>",
        "<i>{name} –∑–∞–º–∞—Ö–Ω—É–ª—Å—è, –Ω–æ –í—ã—à–∏–±–∞–ª–∞ –ø–æ–π–º–∞–ª –µ–≥–æ –∑–∞ —Ä—É–∫—É!</i>",
        "<i>{name} —Å–ø–æ—Ç–∫–Ω—É–ª—Å—è –Ω–∞ —Ä–æ–≤–Ω–æ–º –º–µ—Å—Ç–µ. –í—ã—à–∏–±–∞–ª–∞ —Å–º–µ–µ—Ç—Å—è...</i>"
    ]
}
# --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø 1 ---

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–π–¥–æ–≤ {chat_id: Raid}
active_raids = {}
raid_tasks = {} # {chat_id: asyncio.Task}

class Raid:
    def __init__(self, chat_id, settings: SettingsManager):
        self.chat_id = chat_id
        self.max_health = random.randint(settings.raid_boss_min_hp, settings.raid_boss_max_hp)
        self.current_health = self.max_health
        self.reward = random.randint(settings.raid_reward_min, settings.raid_reward_max)
        self.duration = settings.raid_duration
        self.start_time = int(time.time())
        self.participants = set() # –•—Ä–∞–Ω–∏–º user_id
        self.message_id = None
        self.lock = asyncio.Lock()
        self.last_attackers = [] # (user_name, text)

    @property
    def is_active(self):
        return self.current_health > 0 and (time.time() - self.start_time) < self.duration

    def add_attacker_log(self, name, text):
        safe_name = html.escape(name)
        self.last_attackers.append((safe_name, text))
        if len(self.last_attackers) > 5:
            self.last_attackers.pop(0)

# --- –ö–û–ú–ê–ù–î–ê –ó–ê–ü–£–°–ö–ê –†–ï–ô–î–ê (–ê–î–ú–ò–ù) ---
@game_router.message(Command("raid"))
async def cmd_raid(message: Message, bot: Bot, db: Database, settings: SettingsManager):
    if message.chat.type == "private":
        return await message.answer("‚ùå –†–µ–π–¥—ã –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö.")
    if not await db.is_admin(message.from_user.id):
        return await message.answer("‚õî –≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞.")
    
    chat_id = message.chat.id
    if chat_id in active_raids and active_raids[chat_id].is_active:
        return await message.answer("üî• –†–µ–π–¥ —É–∂–µ –∏–¥–µ—Ç!")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∫—É–ª–¥–∞—É–Ω–∞
    last_raid_time = await db.get_last_raid_time(chat_id)
    cooldown = settings.raid_global_cooldown
    current_time = int(time.time())
    
    if last_raid_time and (current_time - last_raid_time) < cooldown:
        remaining = cooldown - (current_time - last_raid_time)
        # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï 2: –¢–µ–∫—Å—Ç –∫—É–ª–¥–∞—É–Ω–∞ —Ä–µ–π–¥–∞ (—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π) ---
        return await message.answer(f"üçª –ë–∞—Ä –µ—â–µ –Ω–µ –æ—Ç–æ—à–µ–ª –æ—Ç –ø—Ä–æ—à–ª–æ–≥–æ —Ä–µ–π–¥–∞!\n–ù–æ–≤—ã–π '–í—ã—à–∏–±–∞–ª–∞' –ø–æ—è–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑: {format_time_delta(remaining)}.")
        # --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø 2 ---

    raid = Raid(chat_id, settings)
    active_raids[chat_id] = raid
    await db.set_last_raid_time(chat_id, current_time)

    raid_message = await message.answer(
        generate_raid_message(raid),
        reply_markup=generate_raid_keyboard(raid, settings),
        parse_mode='HTML'
    )
    raid.message_id = raid_message.message_id
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞—Å–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–≤–µ—Ä—à–∏—Ç —Ä–µ–π–¥
    raid_tasks[chat_id] = asyncio.create_task(
        raid_updater(bot, db, raid, settings)
    )

# --- –ì–ï–ù–ï–†–ê–¶–ò–Ø –ì–õ–ê–í–ù–û–ì–û –°–û–û–ë–©–ï–ù–ò–Ø –†–ï–ô–î–ê ---
def generate_raid_message(raid: Raid) -> str:
    health_percent = (raid.current_health / raid.max_health) * 100
    health_bar = "‚ñà" * int(health_percent / 10) + "‚ñë" * (10 - int(health_percent / 10))
    
    health = raid.current_health
    if health < 0: health = 0
    
    time_left = raid.start_time + raid.duration - int(time.time())
    time_str = format_time_delta(time_left) if time_left > 0 else "0 —Å–µ–∫"

    attack_log = "\n".join(f"‚Ä¢ {name}: {text}" for name, text in raid.last_attackers)
    if not attack_log:
        attack_log = "<i>(–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ —Ä–∏—Å–∫–Ω—É–ª...)</i>"

    # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï 3: –ì–ª–∞–≤–Ω—ã–π —Ç–µ–∫—Å—Ç —Ä–µ–π–¥–∞ (–∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ + –º–æ—Ç–∏–≤–∞—Ü–∏—è) ---
    text = (
        f"üö® <b>–í–´–®–ò–ë–ê–õ–ê –í –ë–ê–†–ï!</b> üö®\n\n"
        f"–≠—Ç–æ—Ç –≥—Ä–æ–º–∏–ª–∞ <b>–Ω–µ –ø—É—Å–∫–∞–µ—Ç –Ω–∏–∫–æ–≥–æ –∫ —Å—Ç–æ–π–∫–µ!</b> –ù—É–∂–Ω–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –Ω–∏–º –≤—Å–µ–º –≤–º–µ—Å—Ç–µ!\n\n"
        f"‚ù§Ô∏è <b>–ó–¥–æ—Ä–æ–≤—å–µ:</b> <code>{health_bar}</code>\n"
        f"({health} / {raid.max_health})\n\n"
        f"üí∞ <b>–û–±—â–∞—è –Ω–∞–≥—Ä–∞–¥–∞:</b> <b>{raid.reward} üç∫</b>\n"
        f"‚è≥ <b>–£–π–¥–µ—Ç —Å–∞–º —á–µ—Ä–µ–∑:</b> <b>{time_str}</b>\n\n"
        f"<b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:</b>\n{attack_log}"
    )
    # --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø 3 ---
    return text

# --- –ì–ï–ù–ï–†–ê–¶–ò–Ø –ö–ù–û–ü–û–ö –†–ï–ô–î–ê ---
def generate_raid_keyboard(raid: Raid, settings: SettingsManager) -> InlineKeyboardMarkup:
    # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï 4: –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–æ–∫ (—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π) ---
    buttons = [
        [
            InlineKeyboardButton(text="üí• –ö–∏–Ω—É—Ç—å –∫—Ä—É–∂–∫–æ–π (–ë–µ—Å–ø–ª.)", callback_data="raid_attack_normal"),
            InlineKeyboardButton(text=f"ü™ë –£–¥–∞—Ä–∏—Ç—å —Å—Ç—É–ª–æ–º ({settings.raid_strong_attack_cost} üç∫)", callback_data="raid_attack_strong")
        ],
        [InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="raid_refresh")]
    ]
    # --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø 4 ---
    return InlineKeyboardMarkup(inline_keyboard=buttons)

# --- –¢–ê–°–ö –û–ë–ù–û–í–õ–ï–ù–ò–Ø –†–ï–ô–î–ê ---
async def raid_updater(bot: Bot, db: Database, raid: Raid, settings: SettingsManager):
    update_interval = 15 # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫
    end_time = raid.start_time + raid.duration
    
    while raid.is_active:
        await asyncio.sleep(update_interval)
        if not raid.is_active: break # –ú–æ–≥–ª–∏ —É–±–∏—Ç—å –¥–æ —Ç–∞–π–º–µ—Ä–∞
        
        try:
            await bot.edit_message_text(
                chat_id=raid.chat_id,
                message_id=raid.message_id,
                text=generate_raid_message(raid),
                reply_markup=generate_raid_keyboard(raid, settings),
                parse_mode='HTML'
            )
        except Exception:
            pass # –û—à–∏–±–∫–∏ (—É–¥–∞–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ç.–¥.)

    # –†–µ–π–¥ –∑–∞–≤–µ—Ä—à–µ–Ω
    if raid.chat_id in active_raids:
        del active_raids[raid.chat_id]
    if raid.chat_id in raid_tasks:
        del raid_tasks[raid.chat_id]
        
    await check_raid_status(bot, db, raid)

# --- –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê (–ü–û–ë–ï–î–ê/–ü–û–†–ê–ñ–ï–ù–ò–ï) ---
async def check_raid_status(bot: Bot, db: Database, raid: Raid):
    if raid.current_health <= 0:
        # –ü–æ–±–µ–¥–∞
        reward_per_user = 0
        if raid.participants:
            reward_per_user = raid.reward // len(raid.participants)
            
        winners_list = []
        for user_id in raid.participants:
            await db.update_user_beer_rating(user_id, reward_per_user)
            try:
                # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–º—è, –Ω–æ –µ—Å–ª–∏ —é–∑–µ—Ä –≤—ã—à–µ–ª - –Ω–µ —Å—Ç—Ä–∞—à–Ω–æ
                user = await bot.get_chat_member(raid.chat_id, user_id)
                winners_list.append(html.escape(user.user.full_name))
            except Exception:
                winners_list.append(f"–ò–≥—Ä–æ–∫ (ID: {user_id})")
        
        # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï 5: –¢–µ–∫—Å—Ç –ø–æ–±–µ–¥—ã (—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π) ---
        text = (
            f"üèÜ <b>–ü–û–ë–ï–î–ê!</b> üèÜ\n\n"
            f"–í—ã—à–∏–±–∞–ª–∞ –ø–æ–≤–µ—Ä–∂–µ–Ω! <b>–ü—É—Ç—å –∫ –±–∞—Ä—É —Å–≤–æ–±–æ–¥–µ–Ω!</b>\n\n"
            f"–í—Å–µ, –∫—Ç–æ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ '—É–±–µ–∂–¥–µ–Ω–∏–∏', –¥–µ–ª—è—Ç <b>{raid.reward} üç∫</b> (–ø–æ <b>{reward_per_user} üç∫</b> –∫–∞–∂–¥–æ–º—É).\n\n"
            f"<b>–ì–µ—Ä–æ–∏ –¥–Ω—è:</b>\n" + "\n".join(f"‚Ä¢ {name}" for name in winners_list)
        )
        # --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø 5 ---
        
    else:
        # –ü–æ—Ä–∞–∂–µ–Ω–∏–µ
        # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï 6: –¢–µ–∫—Å—Ç –ø–æ—Ä–∞–∂–µ–Ω–∏—è (—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π) ---
        text = (
            f"‚åõ <b>–í–´–®–ò–ë–ê–õ–ê –£–®–ï–õ!</b> ‚åõ\n\n"
            f"–í—Ä–µ–º—è –≤—ã—à–ª–æ. –í—ã—à–∏–±–∞–ª–∞ –æ—Ç—Ä—è—Ö–Ω—É–ª—Å—è, —Ö–º—ã–∫–Ω—É–ª –∏ —É—à–µ–ª —Å–∞–º...\n"
            f"–ù–∞–≥—Ä–∞–¥–∞ (<b>{raid.reward} üç∫</b>) –Ω–∏–∫–æ–º—É –Ω–µ –¥–æ—Å—Ç–∞–µ—Ç—Å—è.\n\n"
            f"<i>–í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –±–µ–π—Ç–µ —Å–∏–ª—å–Ω–µ–µ!</i>"
        )
        # --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø 6 ---

    try:
        await bot.edit_message_text(
            chat_id=raid.chat_id,
            message_id=raid.message_id,
            text=text,
            reply_markup=None,
            parse_mode='HTML'
        )
    except Exception:
        pass # –°–æ–æ–±—â–µ–Ω–∏–µ –º–æ–≥–ª–æ –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–æ

# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–ù–û–ü–û–ö –†–ï–ô–î–ê ---
@game_router.callback_query(F.data.startswith("raid_"))
async def raid_button_callback(callback: CallbackQuery, bot: Bot, db: Database, settings: SettingsManager):
    chat_id = callback.message.chat.id
    if chat_id not in active_raids:
        return await callback.answer("‚ùå –≠—Ç–æ—Ç —Ä–µ–π–¥ —É–∂–µ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è!", show_alert=True)
    
    raid = active_raids[chat_id]
    if not raid.is_active:
        return await callback.answer("‚ùå –≠—Ç–æ—Ç —Ä–µ–π–¥ —É–∂–µ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è!", show_alert=True)
        
    if callback.data == "raid_refresh":
        # –ü—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (–∑–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞)
        await callback.answer()
        try:
            return await callback.message.edit_text(
                generate_raid_message(raid),
                reply_markup=generate_raid_keyboard(raid, settings),
                parse_mode='HTML'
            )
        except Exception:
            return # –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å (–æ–±—ã—á–Ω–æ –∏–∑-–∑–∞ "Message is not modified")

    # --- –õ–û–ì–ò–ö–ê –ê–¢–ê–ö–ò ---
    if not await check_user_registered(callback, bot, db):
        return

    user_id = callback.from_user.id
    current_time = int(time.time())
    
    # –ö—É–ª–¥–∞—É–Ω –∞—Ç–∞–∫–∏
    last_attack_time = await db.get_user_last_raid_attack(user_id, raid.chat_id)
    cooldown = settings.raid_attack_cooldown
    if last_attack_time and (current_time - last_attack_time) < cooldown:
        remaining = cooldown - (current_time - last_attack_time)
        return await callback.answer(f"–¢—ã –ø–æ–∫–∞ –æ—Ç–¥—ã—Ö–∞–µ—à—å... –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∞—Ç–∞–∫–∞ —á–µ—Ä–µ–∑ {remaining} —Å–µ–∫.", show_alert=True)

    await db.set_user_last_raid_attack(user_id, raid.chat_id, current_time)

    # –í—ã–±–æ—Ä –∞—Ç–∞–∫–∏
    if callback.data == "raid_attack_normal":
        damage = random.randint(settings.raid_normal_attack_min, settings.raid_normal_attack_max)
        attack_text = random.choice(RAID_ATTACK_PHRASES['normal']).format(name="{name}", damage=damage)
    
    elif callback.data == "raid_attack_strong":
        cost = settings.raid_strong_attack_cost
        user_rating = await db.get_user_beer_rating(user_id)
        if user_rating < cost:
            return await callback.answer(f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç '–ø–∏–≤–∞' –Ω–∞ '—É–¥–∞—Ä —Å—Ç—É–ª–æ–º'! –ù—É–∂–Ω–æ {cost} üç∫.", show_alert=True)
        
        await db.update_user_beer_rating(user_id, -cost)
        damage = random.randint(settings.raid_strong_attack_min, settings.raid_strong_attack_max)
        attack_text = random.choice(RAID_ATTACK_PHRASES['strong']).format(name="{name}", damage=damage)
    
    else:
        return await callback.answer() # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞

    # –®–∞–Ω—Å –ø—Ä–æ–º–∞—Ö–∞
    if random.random() < settings.raid_attack_miss_chance:
        damage = 0
        attack_text = random.choice(RAID_ATTACK_PHRASES['fail']).format(name="{name}")
        await callback.answer("–ü—Ä–æ–º–∞—Ö!", show_alert=False)
    else:
        await callback.answer(f"–£–¥–∞—Ä! {damage} —É—Ä–æ–Ω–∞!", show_alert=False)

    async with raid.lock:
        if not raid.is_active: return # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—â–µ —Ä–∞–∑, –≤–¥—Ä—É–≥ —É–±–∏–ª–∏ –ø–æ–∫–∞ –∂–¥–∞–ª–∏ lock
        
        raid.current_health -= damage
        raid.participants.add(user_id)
        raid.add_attacker_log(callback.from_user.full_name, attack_text.format(name="", damage=damage).strip()) # –õ–æ–≥ –±–µ–∑ –∏–º–µ–Ω–∏

        if raid.current_health <= 0:
            # –Æ–∑–µ—Ä –Ω–∞–Ω–µ—Å –ø–æ–±–µ–¥–Ω—ã–π —É–¥–∞—Ä! –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º.
            if raid_tasks.get(chat_id):
                raid_tasks[chat_id].cancel()
            await check_raid_status(bot, db, raid) # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
            if chat_id in active_raids: del active_raids[chat_id]
            if chat_id in raid_tasks: del raid_tasks[chat_id]
        else:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (–µ—Å–ª–∏ –Ω–µ —É–±–∏–ª–∏)
            try:
                await callback.message.edit_text(
                    generate_raid_message(raid),
                    reply_markup=generate_raid_keyboard(raid, settings),
                    parse_mode='HTML'
                )
            except Exception:
                pass # "Message is not modified"
