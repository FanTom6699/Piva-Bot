# handlers/common.py
from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery, ChatMemberUpdated, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart, Command

# –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ò–ú–ü–û–†–¢ (–¥–æ–±–∞–≤–ª–µ–Ω—ã ..)
from ..database import Database

common_router = Router()

# --- –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò ---
async def check_user_registered(message_or_callback: Message | CallbackQuery, bot: Bot, db: Database) -> bool:
    user = message_or_callback.from_user
    if await db.user_exists(user.id):
        return True
    me = await bot.get_me()
    start_link = f"https://t.me/{me.username}?start=register"
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚úçÔ∏è –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", url=start_link)]])
    text = (
        "<b>–≠–π, –Ω–æ–≤–∏—á–æ–∫!</b> üçª\n\n"
        "–ü—Ä–µ–∂–¥–µ —á–µ–º –∏–≥—Ä–∞—Ç—å, –Ω—É–∂–Ω–æ –∑–∞–π—Ç–∏ –≤ –±–∞—Ä! "
        "–Ø —Ç–µ–±—è –µ—â–µ –Ω–µ –∑–Ω–∞—é. –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å–æ –º–Ω–æ–π –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è."
    )
    if isinstance(message_or_callback, Message):
        await message_or_callback.reply(text, reply_markup=keyboard, parse_mode='HTML')
    else:
        await message_or_callback.answer("–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!", show_alert=True)
        await bot.send_message(message_or_callback.message.chat.id, text, reply_markup=keyboard, parse_mode='HTML')
    return False

# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô –ß–ê–¢–ê ---
@common_router.my_chat_member()
async def handle_bot_membership(event: ChatMemberUpdated, bot: Bot, db: Database):
    old_status = event.old_chat_member.status
    new_status = event.new_chat_member.status
    if old_status in ("left", "kicked") and new_status in ("member", "administrator"):
        await db.add_chat(event.chat.id, event.chat.title)
    elif old_status in ("member", "administrator") and new_status in ("left", "kicked"):
        await db.remove_chat(event.chat.id)

# --- –ö–û–ú–ê–ù–î–´ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô ---
@common_router.message(CommandStart())
async def cmd_start(message: Message, db: Database):
    user = message.from_user
    if not await db.user_exists(user.id):
        await db.add_user(user.id, user.first_name, user.last_name, user.username)
        welcome_text = (
            f"–ü—Ä–∏–≤–µ—Ç, {user.full_name}! üëã\n"
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –ø–∏–≤–Ω–æ–π –∫–ª—É–±! –¢–≤–æ–π –Ω–∞—á–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥: 0 üç∫.\n\n"
            f"–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n"
            f"‚Ä¢ <code>/beer</code> - –ò—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É (—Ä–∞–∑ –≤ 2 —á–∞—Å–∞).\n"
            f"‚Ä¢ <code>/top</code> - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤.\n"
            f"‚Ä¢ <code>/jackpot</code> - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π –¥–∂–µ–∫–ø–æ—Ç.\n"
            f"‚Ä¢ <code>/roulette &lt;—Å—Ç–∞–≤–∫–∞&gt; &lt;–∏–≥—Ä–æ–∫–∏&gt;</code> - –ó–∞–ø—É—Å—Ç–∏—Ç—å '–ü–∏–≤–Ω—É—é —Ä—É–ª–µ—Ç–∫—É'.\n"
            f"‚Ä¢ <code>/ladder &lt;—Å—Ç–∞–≤–∫–∞&gt;</code> - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É –≤ '–ü–∏–≤–Ω—É—é –ª–µ—Å–µ–Ω–∫—É'.\n"
            f"‚Ä¢ <code>/help</code> - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É."
        )
        await message.answer(welcome_text, parse_mode='HTML')
    else:
        rating = await db.get_user_beer_rating(user.id)
        await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user.full_name}! üçª\n–¢–≤–æ–π —Ç–µ–∫—É—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {rating} üç∫.")

@common_router.message(Command("help"))
async def cmd_help(message: Message):
    help_text = (
        "<b>üçª –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞ üçª</b>\n\n"
        "–ó–¥–µ—Å—å —Å–æ–±—Ä–∞–Ω—ã –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ.\n\n"
        "--- --- ---\n"
        "<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã</b>\n"
        "‚Ä¢ <code>/start</code> - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å.\n"
        "‚Ä¢ <code>/beer</code> - –ò—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É (—Ä–∞–∑ –≤ 2 —á–∞—Å–∞).\n"
        "‚Ä¢ <code>/top</code> - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤.\n"
        "‚Ä¢ <code>/jackpot</code> - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π –¥–∂–µ–∫–ø–æ—Ç.\n\n"
        "--- --- ---\n"
        "<b>–ú–∏–Ω–∏-–∏–≥—Ä—ã</b>\n"
        "‚Ä¢ <code>/roulette &lt;—Å—Ç–∞–≤–∫–∞&gt; &lt;–∏–≥—Ä–æ–∫–∏&gt;</code> - –ó–∞–ø—É—Å—Ç–∏—Ç—å '–ü–∏–≤–Ω—É—é —Ä—É–ª–µ—Ç–∫—É' –≤ –≥—Ä—É–ø–ø–µ.\n"
        "‚Ä¢ <code>/ladder &lt;—Å—Ç–∞–≤–∫–∞&gt;</code> - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É –≤ '–ü–∏–≤–Ω—É—é –ª–µ—Å–µ–Ω–∫—É'.\n\n"
        "--- --- ---\n"
        "<b>–ü—Ä–æ—á–µ–µ</b>\n"
        "‚Ä¢ <code>/id</code> - –£–∑–Ω–∞—Ç—å —Å–≤–æ–π User ID –∏ ID —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞."
    )
    await message.answer(help_text, parse_mode='HTML')

@common_router.message(Command("id"))
async def cmd_id(message: Message):
    await message.reply(
        f"‚ÑπÔ∏è **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**\n\n"
        f"üë§ –í–∞—à User ID: <code>{message.from_user.id}</code>\n"
        f"üí¨ ID —ç—Ç–æ–≥–æ —á–∞—Ç–∞: <code>{message.chat.id}</code>",
        parse_mode='HTML'
    )

@common_router.message(Command("jackpot"))
async def cmd_jackpot(message: Message, db: Database):
    current_jackpot = await db.get_jackpot()
    await message.answer(
        f"üí∞ <b>–¢–µ–∫—É—â–∏–π –î–∂–µ–∫–ø–æ—Ç</b> üí∞\n\n"
        f"–í –±–∞–Ω–∫–µ —Å–µ–π—á–∞—Å –Ω–∞–∫–æ–ø–ª–µ–Ω–æ: <b>{current_jackpot} üç∫</b>\n\n"
        f"<i>–ö–∞–∂–¥—ã–π –ø—Ä–æ–∏–≥—Ä—ã—à –≤ <code>/beer</code> –ø–æ–ø–æ–ª–Ω—è–µ—Ç –±–∞–Ω–∫, –∏ –∫–∞–∂–¥—ã–π, –∫—Ç–æ –Ω–∞–∂–∏–º–∞–µ—Ç <code>/beer</code>, –º–æ–∂–µ—Ç –µ–≥–æ —Å–æ—Ä–≤–∞—Ç—å!</i>",
        parse_mode='HTML'
    )
