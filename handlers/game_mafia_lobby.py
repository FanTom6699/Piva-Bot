# handlers/game_mafia_lobby.py
import asyncio
import logging
from aiogram import Router, Bot, F, html
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command, StateFilter
from aiogram.filters.callback_data import CallbackData
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.exceptions import TelegramBadRequest
from contextlib import suppress

from database import Database
from settings import SettingsManager
from utils import active_lobby_timers, format_time_left

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ '–†—É–ª–µ—Ç–∫—É' –∏ '–õ–µ—Å–µ–Ω–∫—É'
from .user_commands import is_game_active, active_games, GAME_ACTIVE_KEY

mafia_lobby_router = Router()

# --- FSM (–ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è "–ü–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–ª–æ–≤–∞" –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–∞–π–ª–µ) ---
class MafiaGameStates(StatesGroup):
    game_in_progress = State() # –û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
    awaiting_last_word = State() # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–±–∏—Ç–æ–≥–æ
    night_voting = State() # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —á–∞—Ç–∞ –º–∞—Ñ–∏–∏

# --- CallbackData ---
class MafiaLobbyCallbackData(CallbackData, prefix="mafia_lobby"):
    action: str # join, leave, start, toggle_timer, cancel

# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –õ–æ–±–±–∏ ---

async def generate_lobby_text_and_keyboard(db: Database, settings: SettingsManager, chat_id: int, creator_id: int, timer_enabled: bool) -> (str, InlineKeyboardMarkup):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ª–æ–±–±–∏-—Å–æ–æ–±—â–µ–Ω–∏—è."""
    
    players_list_data = await db.get_mafia_players(chat_id)
    player_count = len(players_list_data)
    
    # --- –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ë–õ–û–ö –ü–û–õ–£–ß–ï–ù–ò–Ø –ò–ú–ï–ù ---
    player_lines = []
    for i, player_data in enumerate(players_list_data):
        user_id = player_data[1] # [game_id, user_id, ...]
        user_name = None
        
        db_user = await db.get_user_by_id(user_id)
        if db_user:
            # (first_name, last_name, username)
            user_name = db_user[0] # –ë–µ—Ä–µ–º first_name –∏–∑ –Ω–∞—à–µ–π –ë–î
            
        if not user_name:
             # –ï—Å–ª–∏ –≤–¥—Ä—É–≥ –≤ –ë–î –Ω–µ—Ç (—Ö–æ—Ç—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å), –ø–∏—à–µ–º –∑–∞–≥–ª—É—à–∫—É
             user_name = f"–ò–≥—Ä–æ–∫ {i+1}"

        if user_id == creator_id:
            player_lines.append(f"‚Ä¢ üëë {html.quote(user_name)} (–°–æ–∑–¥–∞—Ç–µ–ª—å)")
        else:
            player_lines.append(f"‚Ä¢ {html.quote(user_name)}")
    # --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –ë–õ–û–ö–ê ---

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    text = f"üçª <b>–ù–ê–ë–û–† –í –ü–ò–í–ù–û–ô –ü–ï–†–ï–ü–û–õ–û–•!</b> üçª\n\n"
    text += f"–°–æ–±–∏—Ä–∞–µ–º –∫–æ–º–ø–∞–Ω–∏—é ({settings.mafia_min_players}-{settings.mafia_max_players} —á–µ–ª) –¥–ª—è –∏–≥—Ä—ã.\n\n"
    text += f"<b>–ò–≥—Ä–æ–∫–∏ ({player_count}/{settings.mafia_max_players}):</b>\n"
    text += "\n".join(player_lines)
    
    if timer_enabled:
        time_left_str = format_time_left(settings.mafia_lobby_timer)
        text += f"\n\n‚è≥ <i>–ò–≥—Ä–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ ~{time_left_str}.</i>"
    else:
        text += f"\n\n‚è≥ <i>–ê–≤—Ç–æ-—Å—Ç–∞—Ä—Ç –æ—Ç–∫–ª—é—á–µ–Ω. –ñ–¥–µ–º, –ø–æ–∫–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏—Ç –∏–≥—Ä—É –≤—Ä—É—á–Ω—É—é.</i>"

    # –§–∏–Ω–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–∫–∞–∫ –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úçÔ∏è –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è", callback_data=MafiaLobbyCallbackData(action="join").pack())],
        [InlineKeyboardButton(text="üö™ –í—ã–π—Ç–∏", callback_data=MafiaLobbyCallbackData(action="leave").pack())],
        [
            InlineKeyboardButton(text=f"üöÄ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É ({player_count}/{settings.mafia_min_players}+)", callback_data=MafiaLobbyCallbackData(action="start").pack()),
            InlineKeyboardButton(
                text="üö´ –û—Ç–∫–ª. —Ç–∞–π–º–µ—Ä" if timer_enabled else "‚úÖ –í–∫–ª. —Ç–∞–π–º–µ—Ä",
                callback_data=MafiaLobbyCallbackData(action="toggle_timer").pack()
            )
        ],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –Ω–∞–±–æ—Ä", callback_data=MafiaLobbyCallbackData(action="cancel").pack())]
    ])

    return text, keyboard

async def update_lobby_message(bot: Bot, db: Database, settings: SettingsManager, chat_id: int):
    """–ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ª–æ–±–±–∏."""
    game = await db.get_mafia_game(chat_id)
    if not game or game[3] != 'lobby': # game[3] —ç—Ç–æ 'status'
        return

    message_id = game[1] # message_id
    creator_id = game[2] # creator_id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω –ª–∏ —Ç–∞–π–º–µ—Ä
    timer_enabled = chat_id in active_lobby_timers

    text, keyboard = await generate_lobby_text_and_keyboard(db, settings, chat_id, creator_id, timer_enabled)
    
    with suppress(TelegramBadRequest):
        await bot.edit_message_text(text, chat_id, message_id, reply_markup=keyboard, parse_mode="HTML")

async def lobby_timer_task(chat_id: int, bot: Bot, db: Database, settings: SettingsManager):
    """–§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞-—Ç–∞–π–º–µ—Ä, –∫–æ—Ç–æ—Ä–∞—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –ª–æ–±–±–∏ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É."""
    lobby_duration = settings.mafia_lobby_timer
    
    # –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥ (–∏–ª–∏ —á–∞—â–µ, –µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –∫–æ—Ä–æ—Ç–∫–∏–π)
    sleep_time = min(15, lobby_duration // 3)
    if sleep_time <= 0: sleep_time = lobby_duration
    
    slept_time = 0
    while slept_time < lobby_duration:
        await asyncio.sleep(sleep_time)
        slept_time += sleep_time
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–º–µ–Ω–∏–ª–∏ –ª–∏ —Ç–∞–π–º–µ—Ä
        if chat_id not in active_lobby_timers:
            logging.info(f"[Mafia {chat_id}] –¢–∞–π–º–µ—Ä –ª–æ–±–±–∏ –æ—Ç–º–µ–Ω–µ–Ω.")
            return
            
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ª–æ–±–±–∏ —Å –Ω–æ–≤—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
        game = await db.get_mafia_game(chat_id)
        if not game: return
        
        message_id = game[1]
        creator_id = game[2]
        
        time_left_approx = lobby_duration - slept_time
        time_left_str = format_time_left(time_left_approx)

        text, keyboard = await generate_lobby_text_and_keyboard(db, settings, chat_id, creator_id, True)
        text = text.replace(f"~{format_time_left(lobby_duration)}", f"~{time_left_str}")
        
        with suppress(TelegramBadRequest):
            await bot.edit_message_text(text, chat_id, message_id, reply_markup=keyboard, parse_mode="HTML")

    # –í—Ä–µ–º—è –≤—ã—à–ª–æ! –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
    logging.info(f"[Mafia {chat_id}] –¢–∞–π–º–µ—Ä –ª–æ–±–±–∏ –∏—Å—Ç–µ–∫. –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É...")
    if chat_id in active_lobby_timers:
        del active_lobby_timers[chat_id]
        
    await start_mafia_game(chat_id, bot, db, settings)

async def start_mafia_game(chat_id: int, bot: Bot, db: Database, settings: SettingsManager):
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞. –ü—Ä–æ–≤–æ–¥–∏—Ç –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ (–∫–æ–ª-–≤–æ, –õ–°) 
    –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —è–¥—Ä—É –∏–≥—Ä—ã (–∫–æ—Ç–æ—Ä–æ–µ –º—ã –Ω–∞–ø–∏—à–µ–º –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–∞–π–ª–µ).
    """
    logging.info(f"[Mafia {chat_id}] –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã...")
    
    # 0. –û—Ç–º–µ—á–∞–µ–º –∏–≥—Ä—É –∫–∞–∫ "–∞–∫—Ç–∏–≤–Ω—É—é" –≤ –æ–±—â–µ–º —Å–ª–æ–≤–∞—Ä–µ
    active_games[chat_id] = {GAME_ACTIVE_KEY: True, "user_id": 0, "game_type": "mafia"}
    
    # 1. –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –æ–Ω –µ—â–µ –∞–∫—Ç–∏–≤–µ–Ω
    if chat_id in active_lobby_timers:
        active_lobby_timers[chat_id].cancel()
        del active_lobby_timers[chat_id]
        
    # 2. –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä—É –∏ –∏–≥—Ä–æ–∫–æ–≤
    game = await db.get_mafia_game(chat_id)
    if not game or game[3] != 'lobby': # game[3] —ç—Ç–æ 'status'
        logging.warning(f"[Mafia {chat_id}] –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞, –Ω–æ –∏–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î –∏–ª–∏ –Ω–µ –≤ –ª–æ–±–±–∏.")
        if chat_id in active_games: del active_games[chat_id]
        return
        
    message_id = game[1]
    players = await db.get_mafia_players(chat_id)
    player_count = len(players)
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ú–∏–Ω. –∫–æ–ª-–≤–æ –∏–≥—Ä–æ–∫–æ–≤
    if player_count < settings.mafia_min_players:
        logging.info(f"[Mafia {chat_id}] –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ ({player_count}). –û—Ç–º–µ–Ω–∞.")
        await db.delete_mafia_game(chat_id)
        if chat_id in active_games: del active_games[chat_id]
        
        with suppress(TelegramBadRequest):
            await bot.edit_message_text(
                f"‚ùå <b>–ù–∞–±–æ—Ä –æ—Ç–º–µ–Ω–µ–Ω!</b> ‚ùå\n–ù–µ –Ω–∞–±—Ä–∞–ª–æ—Å—å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –∏–≥—Ä–æ–∫–æ–≤ ({settings.mafia_min_players}).",
                chat_id, message_id, reply_markup=None
            )
        with suppress(TelegramBadRequest):
            await bot.unpin_chat_message(chat_id, message_id)
        return

    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –õ–° (–°–∞–º–∞—è –≤–∞–∂–Ω–∞—è)
    await bot.edit_message_text(
        "‚è≥ <i>–ü—Ä–æ–≤–µ—Ä—è—é, —á—Ç–æ –º–æ–≥—É –Ω–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º –≤ –õ–°...</i>",
        chat_id, message_id, reply_markup=None
    )
    
    undeliverable_users_data = []
    
    for player_data in players:
        user_id = player_data[1]
        try:
            await bot.send_message(user_id, "‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...\n–ò–≥—Ä–∞ '–ü–∏–≤–Ω–æ–π –ü–µ—Ä–µ–ø–æ–ª–æ—Ö' —Å–∫–æ—Ä–æ –Ω–∞—á–Ω–µ—Ç—Å—è!")
            await asyncio.sleep(0.1) # –ó–∞—â–∏—Ç–∞ –æ—Ç —Ñ–ª—É–¥–∞
        except Exception as e:
            logging.warning(f"[Mafia {chat_id}] –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–ø–∏—Å–∞—Ç—å –∏–≥—Ä–æ–∫—É {user_id}: {e}")
            
            user_name = f"–ò–≥—Ä–æ–∫ {user_id}"
            db_user = await db.get_user_by_id(user_id)
            if db_user: user_name = db_user[0]
            undeliverable_users_data.append((user_id, user_name))

    if undeliverable_users_data:
        names_to_tag = [f"{html.quote(name)}" for user_id, name in undeliverable_users_data]
            
        await db.delete_mafia_game(chat_id)
        if chat_id in active_games: del active_games[chat_id]
        
        await bot.edit_message_text(
            f"‚ùå <b>–ò–≥—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!</b> ‚ùå\n\n"
            f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –õ–° —Å–ª–µ–¥—É—é—â–∏–º –∏–≥—Ä–æ–∫–∞–º:\n"
            f"‚Ä¢ {', '.join(names_to_tag)}\n\n"
            f"<i>–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∏—Ö –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ (@{config.BOT_USERNAME}) —É —Å–µ–±—è –≤ –õ–° –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.</i>",
            chat_id, message_id, reply_markup=None, parse_mode="HTML"
        )
        with suppress(TelegramBadRequest):
            await bot.unpin_chat_message(chat_id, message_id)
        return

    # 5. –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!
    logging.info(f"[Mafia {chat_id}] –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã. {player_count} –∏–≥—Ä–æ–∫–æ–≤. –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É...")
    
    # (–í–†–ï–ú–ï–ù–ù–ê–Ø –ó–ê–ì–õ–£–®–ö–ê, –ø–æ–∫–∞ –Ω–µ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞)
    await db.delete_mafia_game(chat_id)
    if chat_id in active_games: del active_games[chat_id]
    
    await bot.edit_message_text(
        f"‚úÖ <b>–ù–∞–±–æ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω! ({player_count} –∏–≥—Ä–æ–∫–æ–≤)</b>\n\n"
        f"<i>(–§—É–Ω–∫—Ü–∏—è '–ù–∞—á–∞—Ç—å –ò–≥—Ä—É' –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...)</i>",
        chat_id, message_id, reply_markup=None
    )
    with suppress(TelegramBadRequest):
        await bot.unpin_chat_message(chat_id, message_id)
        
    # --- –°–Æ–î–ê –ú–´ –î–û–ë–ê–í–ò–ú –í–´–ó–û–í –°–õ–ï–î–£–Æ–©–ï–ì–û –§–ê–ô–õ–ê ---
    # from .game_mafia_core import distribute_roles_and_start
    # await distribute_roles_and_start(chat_id, bot, db, settings, players)
    # --- ---


# --- –•–≠–ù–î–õ–ï–†–´ –õ–û–ë–ë–ò ---

@mafia_lobby_router.message(Command("mafia"))
async def cmd_mafia(message: Message, bot: Bot, db: Database, settings: SettingsManager):
    if message.chat.type == 'private':
        await message.reply("–≠—Ç—É –∏–≥—Ä—É –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö.")
        return
        
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—Ä—É–≥–∏–µ –∏–≥—Ä—ã (–†—É–ª–µ—Ç–∫–∞, –õ–µ—Å–µ–Ω–∫–∞, –ú–∞—Ñ–∏—è)
    if is_game_active(message.chat.id):
        await message.reply("–í —ç—Ç–æ–º —á–∞—Ç–µ —É–∂–µ –∏–¥–µ—Ç –¥—Ä—É–≥–∞—è –∏–≥—Ä–∞ (–†—É–ª–µ—Ç–∫–∞, –õ–µ—Å–µ–Ω–∫–∞ –∏–ª–∏ –ú–∞—Ñ–∏—è). –î–æ–∂–¥–∏—Ç–µ—Å—å –µ–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è.")
        return
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –±–æ—Ç - –∞–¥–º–∏–Ω (–¥–ª—è –ø–∏–Ω–æ–≤ –∏ –º—É—Ç–æ–≤)
    try:
        me = await bot.get_me()
        chat_member = await bot.get_chat_member(message.chat.id, me.id)
        if not chat_member.can_pin_messages or not chat_member.can_restrict_members:
            await message.reply("<b>–û—à–∏–±–∫–∞!</b> üò•\n–î–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–≥—Ä—ã –±–æ—Ç—É –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞:\n‚Ä¢ `–ó–∞–∫—Ä–µ–ø–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è` (–¥–ª—è –ª–æ–±–±–∏)\n‚Ä¢ `–ë–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤` (–¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —á–∞—Ç–∞)", parse_mode="HTML")
            return
    except Exception as e:
        await message.reply(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –û—à–∏–±–∫–∞: {e}")
        return

    # 3. –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É
    creator_id = message.from_user.id
    
    # –°—Ä–∞–∑—É –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—è –≤ –ë–î (—á—Ç–æ–±—ã db.get_user_by_id —Ä–∞–±–æ—Ç–∞–ª–∞)
    # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —É –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å –≤ user_commands, –Ω–æ –º—ã –Ω–µ –º–æ–∂–µ–º –µ–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
    # –ü–æ–≤—Ç–æ—Ä–∏–º –µ–µ –∑–¥–µ—Å—å
    if not await db.user_exists(creator_id):
        await db.add_user(
            user_id=creator_id,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name,
            username=message.from_user.username
        )
    
    # 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏ –∑–∞–∫—Ä–µ–ø–ª—è–µ–º –ª–æ–±–±–∏-—Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        # –í–∫–ª—é—á–∞–µ–º —Ç–∞–π–º–µ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        lobby_text, lobby_keyboard = await generate_lobby_text_and_keyboard(db, settings, message.chat.id, creator_id, True)
        
        # (–ù–∞–º –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞, —á—Ç–æ–±—ã –æ–Ω –æ—Ç–æ–±—Ä–∞–∑–∏–ª—Å—è)
        # (–ü–µ—Ä–µ–Ω–æ—Å–∏–º —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ –î–û –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞)

        # 5. –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –ë–î
        success_create = await db.create_mafia_game(
            chat_id=message.chat.id,
            message_id=0, # –í—Ä–µ–º–µ–Ω–Ω—ã–π
            creator_id=creator_id
        )
        if not success_create:
            # –¢–∞–∫–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å, –µ—Å–ª–∏ /mafia –Ω–∞–∂–∞–ª–∏ 2 —Ä–∞–∑–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
            await message.reply("–ò–≥—Ä–∞ —É–∂–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
            return
            
        # –°—Ä–∞–∑—É –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—è
        await db.add_mafia_player(message.chat.id, creator_id)
        
        # –¢–µ–ø–µ—Ä—å –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        lobby_text, lobby_keyboard = await generate_lobby_text_and_keyboard(db, settings, message.chat.id, creator_id, True)
        
        lobby_message = await message.answer(
            lobby_text,
            reply_markup=lobby_keyboard,
            parse_mode="HTML"
        )
        await bot.pin_chat_message(message.chat.id, lobby_message.message_id)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º message_id –≤ –ë–î
        await db.update_mafia_game_message_id(message.chat.id, lobby_message.message_id)
        
    except Exception as e:
        await message.answer(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ª–æ–±–±–∏. –û—à–∏–±–∫–∞: {e}")
        await db.delete_mafia_game(message.chat.id) # –ß–∏—Å—Ç–∏–º –∑–∞ —Å–æ–±–æ–π
        return
        
    # 6. –û—Ç–º–µ—á–∞–µ–º –∏–≥—Ä—É –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω—É—é
    active_games[message.chat.id] = {GAME_ACTIVE_KEY: True, "user_id": 0, "game_type": "mafia"}
    
    # 7. –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
    task = asyncio.create_task(lobby_timer_task(message.chat.id, bot, db, settings))
    active_lobby_timers[message.chat.id] = task
    logging.info(f"[Mafia {message.chat.id}] –õ–æ–±–±–∏ —Å–æ–∑–¥–∞–Ω–æ, —Ç–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω.")


@mafia_lobby_router.callback_query(MafiaLobbyCallbackData.filter(F.action == "join"))
async def cq_mafia_join(callback: CallbackQuery, bot: Bot, db: Database, settings: SettingsManager):
    chat_id = callback.message.chat.id
    user_id = callback.from_user.id
    
    game = await db.get_mafia_game(chat_id)
    if not game or game[3] != 'lobby':
        await callback.answer("–ù–∞–±–æ—Ä –≤ –∏–≥—Ä—É —É–∂–µ –∑–∞–∫—Ä—ã—Ç.", show_alert=True)
        return

    player_count = await db.get_mafia_player_count(chat_id)
    if player_count >= settings.mafia_max_players:
        await callback.answer(f"–õ–æ–±–±–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ (–º–∞–∫—Å. {settings.mafia_max_players} –∏–≥—Ä–æ–∫–æ–≤).", show_alert=True)
        return
        
    # –î–æ–±–∞–≤–ª—è–µ–º —é–∑–µ—Ä–∞ –≤ users, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
    if not await db.user_exists(user_id):
        await db.add_user(
            user_id=user_id,
            first_name=callback.from_user.first_name,
            last_name=callback.from_user.last_name,
            username=callback.from_user.username
        )
        
    success = await db.add_mafia_player(chat_id, user_id)
    
    if success:
        await callback.answer("–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!")
        await update_lobby_message(bot, db, settings, chat_id)
    else:
        await callback.answer("–í—ã —É–∂–µ –≤ –∏–≥—Ä–µ!", show_alert=True)

@mafia_lobby_router.callback_query(MafiaLobbyCallbackData.filter(F.action == "leave"))
async def cq_mafia_leave(callback: CallbackQuery, bot: Bot, db: Database, settings: SettingsManager):
    chat_id = callback.message.chat.id
    user_id = callback.from_user.id
    
    game = await db.get_mafia_game(chat_id)
    if not game or game[3] != 'lobby':
        await callback.answer("–ù–∞–±–æ—Ä –≤ –∏–≥—Ä—É —É–∂–µ –∑–∞–∫—Ä—ã—Ç.", show_alert=True)
        return
        
    creator_id = game[2]
    if user_id == creator_id:
        await callback.answer("–°–æ–∑–¥–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –ø–æ–∫–∏–Ω—É—Ç—å –ª–æ–±–±–∏. –û—Ç–º–µ–Ω–∏—Ç–µ –Ω–∞–±–æ—Ä (‚ùå).", show_alert=True)
        return
        
    await db.remove_mafia_player(chat_id, user_id)
    await callback.answer("–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ –ª–æ–±–±–∏.")
    await update_lobby_message(bot, db, settings, chat_id)


@mafia_lobby_router.callback_query(MafiaLobbyCallbackData.filter(F.action == "cancel"))
async def cq_mafia_cancel(callback: CallbackQuery, bot: Bot, db: Database):
    chat_id = callback.message.chat.id
    user_id = callback.from_user.id
    
    game = await db.get_mafia_game(chat_id)
    if not game: return
    
    creator_id = game[2]
    if user_id != creator_id and user_id != config.ADMIN_ID:
        await callback.answer("–¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ª–æ–±–±–∏ –∏–ª–∏ –ê–¥–º–∏–Ω –º–æ–∂–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–∞–±–æ—Ä.", show_alert=True)
        return

    # –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä
    if chat_id in active_lobby_timers:
        active_lobby_timers[chat_id].cancel()
        del active_lobby_timers[chat_id]
        
    await db.delete_mafia_game(chat_id)
    if chat_id in active_games: del active_games[chat_id]
    
    await callback.answer("–ù–∞–±–æ—Ä –≤ –∏–≥—Ä—É –æ—Ç–º–µ–Ω–µ–Ω.")
    with suppress(TelegramBadRequest):
        await bot.edit_message_text(
            f"‚ùå <b>–ù–∞–±–æ—Ä –æ—Ç–º–µ–Ω–µ–Ω!</b> ‚ùå\n<i>(–û—Ç–º–µ–Ω–∏–ª: {callback.from_user.first_name})</i>",
            chat_id, callback.message.message_id, reply_markup=None,
            parse_mode="HTML"
        )
    with suppress(TelegramBadRequest):
        await bot.unpin_chat_message(chat_id, callback.message.message_id)

@mafia_lobby_router.callback_query(MafiaLobbyCallbackData.filter(F.action == "toggle_timer"))
async def cq_mafia_toggle_timer(callback: CallbackQuery, bot: Bot, db: Database, settings: SettingsManager):
    chat_id = callback.message.chat.id
    user_id = callback.from_user.id
    
    game = await db.get_mafia_game(chat_id)
    if not game or game[3] != 'lobby': return
    
    creator_id = game[2]
    if user_id != creator_id:
        await callback.answer("–¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ª–æ–±–±–∏ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–∞–π–º–µ—Ä–æ–º.", show_alert=True)
        return

    if chat_id in active_lobby_timers:
        # --- –û—Ç–∫–ª—é—á–∞–µ–º —Ç–∞–π–º–µ—Ä ---
        active_lobby_timers[chat_id].cancel()
        del active_lobby_timers[chat_id]
        await callback.answer("–¢–∞–π–º–µ—Ä –∞–≤—Ç–æ-—Å—Ç–∞—Ä—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω.")
        await update_lobby_message(bot, db, settings, chat_id)
    else:
        # --- –í–∫–ª—é—á–∞–µ–º —Ç–∞–π–º–µ—Ä ---
        task = asyncio.create_task(lobby_timer_task(chat_id, bot, db, settings))
        active_lobby_timers[chat_id] = task
        await callback.answer("–¢–∞–π–º–µ—Ä –∞–≤—Ç–æ-—Å—Ç–∞—Ä—Ç–∞ –∑–∞–ø—É—â–µ–Ω!")
        await update_lobby_message(bot, db, settings, chat_id)

@mafia_lobby_router.callback_query(MafiaLobbyCallbackData.filter(F.action == "start"))
async def cq_mafia_start_game(callback: CallbackQuery, bot: Bot, db: Database, settings: SettingsManager):
    chat_id = callback.message.chat.id
    user_id = callback.from_user.id
    
    game = await db.get_mafia_game(chat_id)
    if not game or game[3] != 'lobby': return
    
    creator_id = game[2]
    if user_id != creator_id:
        await callback.answer("–¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ª–æ–±–±–∏ –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É.", show_alert=True)
        return

    player_count = await db.get_mafia_player_count(chat_id)
    if player_count < settings.mafia_min_players:
        await callback.answer(f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤. –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º {settings.mafia_min_players}.", show_alert=True)
        return
        
    await callback.answer("–ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É...")
    await start_mafia_game(chat_id, bot, db, settings)
